{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/fernandaguerra/Desktop/bootcampProjects/module_28/setting-up-graphql-with-apollo_starter/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation Login($identifier: String!, $password: String!) {\\n    login(input: { identifier: $identifier, password: $password }) {\\n      jwt\\n      user {\\n        username\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cookie from \"js-cookie\";\nimport Form from \"@/components/Form\";\nimport Loader from \"@/components/Loader\";\nvar LOGIN_MUTATION = gql(_templateObject());\nexport default function LoginRoute() {\n  _s();\n\n  var _useAppContext = useAppContext(),\n      setUser = _useAppContext.setUser;\n\n  var router = useRouter();\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var _useMutation = useMutation(LOGIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      loginMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var email, password, _yield$loginMutation, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = formData.email, password = formData.password;\n              _context.next = 3;\n              return loginMutation({\n                variables: {\n                  identifier: email,\n                  password: password\n                }\n              });\n\n            case 3:\n              _yield$loginMutation = _context.sent;\n              data = _yield$loginMutation.data;\n\n              if (data === null || data === void 0 ? void 0 : data.login.user) {\n                setUser(data.login.user);\n                Cookie.set(\"token\", data.login.jwt);\n                router.push(\"/\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (loading) return __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  });\n  return __jsx(Form, {\n    title: \"Login\",\n    buttonText: \"Login\",\n    formData: formData,\n    setFormData: setFormData,\n    callback: handleLogin,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(LoginRoute, \"5lDe8zfwhinEW22sX/WCLm5SdEw=\", false, function () {\n  return [useAppContext, useRouter, useMutation];\n});\n\n_c = LoginRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRoute\");","map":{"version":3,"sources":["/Users/fernandaguerra/Desktop/bootcampProjects/module_28/setting-up-graphql-with-apollo_starter/pages/login.js"],"names":["useState","useRouter","useAppContext","gql","useMutation","Cookie","Form","Loader","LOGIN_MUTATION","LoginRoute","setUser","router","email","password","formData","setFormData","loginMutation","loading","error","handleLogin","variables","identifier","data","login","user","set","jwt","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAMC,cAAc,GAAGL,GAAH,mBAApB;AAYA,eAAe,SAASM,UAAT,GAAsB;AAAA;;AAAA,uBACfP,aAAa,EADE;AAAA,MAC3BQ,OAD2B,kBAC3BA,OAD2B;;AAEnC,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAFmC,kBAIHD,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAJL;AAAA,MAI5BC,QAJ4B;AAAA,MAIlBC,WAJkB;;AAAA,qBAKSX,WAAW,CAACI,cAAD,CALpB;AAAA;AAAA,MAK5BQ,aAL4B;AAAA;AAAA,MAKXC,OALW,kBAKXA,OALW;AAAA,MAKFC,KALE,kBAKFA,KALE;;AAOnC,MAAMC,WAAW;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVP,cAAAA,KADU,GACUE,QADV,CACVF,KADU,EACHC,QADG,GACUC,QADV,CACHD,QADG;AAAA;AAAA,qBAEKG,aAAa,CAAC;AACnCI,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,UAAU,EAAET,KAAd;AAAqBC,kBAAAA,QAAQ,EAARA;AAArB;AADwB,eAAD,CAFlB;;AAAA;AAAA;AAEVS,cAAAA,IAFU,wBAEVA,IAFU;;AAKlB,kBAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,KAAN,CAAYC,IAAhB,EAAsB;AACpBd,gBAAAA,OAAO,CAACY,IAAI,CAACC,KAAL,CAAWC,IAAZ,CAAP;AACAnB,gBAAAA,MAAM,CAACoB,GAAP,CAAW,OAAX,EAAoBH,IAAI,CAACC,KAAL,CAAWG,GAA/B;AACAf,gBAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;AACD;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXR,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAYA,MAAIF,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,QAAQ,EAAEI,WALZ;AAME,IAAA,KAAK,EAAED,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD;;GA/BuBT,U;UACFP,a,EACLD,S,EAG6BG,W;;;KALtBK,U","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cookie from \"js-cookie\";\n\nimport Form from \"@/components/Form\";\nimport Loader from \"@/components/Loader\";\n\nconst LOGIN_MUTATION = gql`\n  mutation Login($identifier: String!, $password: String!) {\n    login(input: { identifier: $identifier, password: $password }) {\n      jwt\n      user {\n        username\n        email\n      }\n    }\n  }\n`;\n\nexport default function LoginRoute() {\n  const { setUser } = useAppContext();\n  const router = useRouter();\n\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n  const [loginMutation, { loading, error }] = useMutation(LOGIN_MUTATION);\n\n  const handleLogin = async () => {\n    const { email, password } = formData;\n    const { data } = await loginMutation({\n      variables: { identifier: email, password },\n    });\n    if (data?.login.user) {\n      setUser(data.login.user);\n      Cookie.set(\"token\", data.login.jwt);\n      router.push(\"/\");\n    }\n  };\n\n  if (loading) return <Loader />;\n\n  return (\n    <Form\n      title=\"Login\"\n      buttonText=\"Login\"\n      formData={formData}\n      setFormData={setFormData}\n      callback={handleLogin}\n      error={error}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}