{"ast":null,"code":"var _jsxFileName = \"/Users/fernandaguerra/Desktop/bootcampProjects/module_28/setting-up-graphql-with-apollo_starter/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cookie from \"js-cookie\";\nimport Form from \"@/components/Form\";\nimport Loader from \"@/components/Loader\";\nconst LOGIN_MUTATION = gql`\n  mutation Login($identifier: String!, $password: String!) {\n    login(input: { identifier: $identifier, password: $password }) {\n      jwt\n      user {\n        username\n        email\n      }\n    }\n  }\n`;\nexport default function LoginRoute() {\n  const {\n    setUser\n  } = useAppContext();\n  const router = useRouter();\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loginMutation, {\n    loading,\n    error\n  }] = useMutation(LOGIN_MUTATION);\n\n  const handleLogin = async () => {\n    const {\n      email,\n      password\n    } = formData;\n    const {\n      data\n    } = await loginMutation({\n      variables: {\n        identifier: email,\n        password\n      }\n    });\n\n    if (data === null || data === void 0 ? void 0 : data.login.user) {\n      setUser(data.login.user);\n      Cookie.set(\"token\", data.login.jwt);\n      router.push(\"/\");\n    }\n  };\n\n  if (loading) return __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  });\n  return __jsx(Form, {\n    title: \"Login\",\n    buttonText: \"Login\",\n    formData: formData,\n    setFormData: setFormData,\n    callback: handleLogin,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/fernandaguerra/Desktop/bootcampProjects/module_28/setting-up-graphql-with-apollo_starter/pages/login.js"],"names":["useState","useRouter","useAppContext","gql","useMutation","Cookie","Form","Loader","LOGIN_MUTATION","LoginRoute","setUser","router","formData","setFormData","email","password","loginMutation","loading","error","handleLogin","data","variables","identifier","login","user","set","jwt","push"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,cAAc,GAAGL,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAe,SAASM,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAcR,aAAa,EAAjC;AACA,QAAMS,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxC;AACA,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAhB,IAAsCd,WAAW,CAACI,cAAD,CAAvD;;AAEA,QAAMW,WAAW,GAAG,YAAY;AAC9B,UAAM;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,QAA5B;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMJ,aAAa,CAAC;AACnCK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,UAAU,EAAER,KAAd;AAAqBC,QAAAA;AAArB;AADwB,KAAD,CAApC;;AAGA,QAAIK,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEG,KAAN,CAAYC,IAAhB,EAAsB;AACpBd,MAAAA,OAAO,CAACU,IAAI,CAACG,KAAL,CAAWC,IAAZ,CAAP;AACAnB,MAAAA,MAAM,CAACoB,GAAP,CAAW,OAAX,EAAoBL,IAAI,CAACG,KAAL,CAAWG,GAA/B;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;AACD;AACF,GAVD;;AAYA,MAAIV,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,QAAQ,EAAEM,WALZ;AAME,IAAA,KAAK,EAAED,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cookie from \"js-cookie\";\n\nimport Form from \"@/components/Form\";\nimport Loader from \"@/components/Loader\";\n\nconst LOGIN_MUTATION = gql`\n  mutation Login($identifier: String!, $password: String!) {\n    login(input: { identifier: $identifier, password: $password }) {\n      jwt\n      user {\n        username\n        email\n      }\n    }\n  }\n`;\n\nexport default function LoginRoute() {\n  const { setUser } = useAppContext();\n  const router = useRouter();\n\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n  const [loginMutation, { loading, error }] = useMutation(LOGIN_MUTATION);\n\n  const handleLogin = async () => {\n    const { email, password } = formData;\n    const { data } = await loginMutation({\n      variables: { identifier: email, password },\n    });\n    if (data?.login.user) {\n      setUser(data.login.user);\n      Cookie.set(\"token\", data.login.jwt);\n      router.push(\"/\");\n    }\n  };\n\n  if (loading) return <Loader />;\n\n  return (\n    <Form\n      title=\"Login\"\n      buttonText=\"Login\"\n      formData={formData}\n      setFormData={setFormData}\n      callback={handleLogin}\n      error={error}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}