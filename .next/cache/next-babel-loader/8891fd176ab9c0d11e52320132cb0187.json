{"ast":null,"code":"var _jsxFileName = \"/Users/fernandaguerra/Desktop/bootcampProjects/module 28/setting-up-graphql-with-apollo_starter/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { centsToDollars } from \"@/utils/centsToDollars\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\nimport Image from \"next/image\";\nimport Loader from '@/components/Loader';\nconst GET_RESTAURANT_DISHES = gql`\n  query ($id: ID!) {\n    restaurant(id: $id) {\n      data {\n        id\n        attributes {\n          name\n          dishes {\n            data {\n              id\n              attributes {\n                name\n                description\n                priceInCents\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DishCard({\n  data\n}) {\n  const {\n    addItem,\n    setShowCart\n  } = useAppContext();\n\n  function handleAddItem() {\n    addItem(data);\n    setShowCart(true);\n  }\n\n  return __jsx(\"div\", {\n    className: \"w-full md:w-1/2 lg:w-1/3 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"h-full bg-gray-100 rounded-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    className: \"w-full rounded-2xl\",\n    height: 300,\n    width: 300,\n    src: `${process.env.STRAPI_URL || \"http://localhost:1337\"}${data.attributes.image.data.attributes.url}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"p-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"group inline-block mb-4\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-heading text-xl text-gray-900 hover:text-gray-700 group-hover:underline font-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, data.attributes.name), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"$\", centsToDollars(data.attributes.priceInCents))), __jsx(\"p\", {\n    className: \"text-sm text-gray-500 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, data.attributes.description), __jsx(\"div\", {\n    className: \"flex flex-wrap md:justify-center -m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full md:w-auto p-2 my-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"block w-full px-12 py-3.5 text-lg text-center text-white font-bold bg-gray-900 hover:bg-gray-800 focus:ring-4 focus:ring-gray-600 rounded-full\",\n    onClick: handleAddItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"+ Add to Cart\"))))));\n}\n\nexport default function Restaurant() {\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: router.query.id\n    }\n  });\n  if (error) return \"Error Loading Dishes\";\n  if (loading) return __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  });\n\n  if (data.restaurant.data.attributes.dishes.data.length) {\n    const {\n      restaurant\n    } = data;\n    return __jsx(\"div\", {\n      className: \"py-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: \"text-4xl font-bold text-green-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, restaurant.data.attributes.name), __jsx(\"div\", {\n      className: \"py-16 px-8 bg-white rounded-3xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"flex flex-wrap -m-4 mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, restaurant.data.attributes.dishes.data.map(res => {\n      return __jsx(DishCard, {\n        key: res.id,\n        data: res,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 24\n        }\n      });\n    })))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 12\n      }\n    }, \"No Dishes Found\");\n  }\n}","map":{"version":3,"sources":["/Users/fernandaguerra/Desktop/bootcampProjects/module 28/setting-up-graphql-with-apollo_starter/pages/_app.js"],"names":["gql","useQuery","centsToDollars","useRouter","useAppContext","Image","Loader","GET_RESTAURANT_DISHES","DishCard","data","addItem","setShowCart","handleAddItem","process","env","STRAPI_URL","attributes","image","url","name","priceInCents","description","Restaurant","router","loading","error","variables","id","query","restaurant","dishes","length","map","res"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { centsToDollars } from \"@/utils/centsToDollars\";\nimport { useRouter } from \"next/router\";\nimport { useAppContext } from \"@/context/AppContext\";\n\nimport Image from \"next/image\";\nimport Loader from '@/components/Loader';\n\nconst GET_RESTAURANT_DISHES = gql`\n  query ($id: ID!) {\n    restaurant(id: $id) {\n      data {\n        id\n        attributes {\n          name\n          dishes {\n            data {\n              id\n              attributes {\n                name\n                description\n                priceInCents\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DishCard({ data }) {\n  const { addItem, setShowCart } = useAppContext();\n\n  function handleAddItem() {\n    addItem(data);\n    setShowCart(true);\n  }\n\n  return (\n    <div className=\"w-full md:w-1/2 lg:w-1/3 p-4\">\n\n      <div className=\"h-full bg-gray-100 rounded-2xl\">\n        <Image\n          className=\"w-full rounded-2xl\"\n          height={300}\n          width={300}\n          src={`${process.env.STRAPI_URL || \"http://localhost:1337\"}${\n            data.attributes.image.data.attributes.url\n          }`}\n          alt=\"\"\n        />\n        <div className=\"p-8\">\n          <div className=\"group inline-block mb-4\" href=\"#\">\n            <h3 className=\"font-heading text-xl text-gray-900 hover:text-gray-700 group-hover:underline font-black\">\n              {data.attributes.name}\n            </h3>\n            <h2>${centsToDollars(data.attributes.priceInCents)}</h2>\n          </div>\n          <p className=\"text-sm text-gray-500 font-bold\">\n            {data.attributes.description}\n          </p>\n          <div className=\"flex flex-wrap md:justify-center -m-2\">\n            <div className=\"w-full md:w-auto p-2 my-6\">\n              <button\n                className=\"block w-full px-12 py-3.5 text-lg text-center text-white font-bold bg-gray-900 hover:bg-gray-800 focus:ring-4 focus:ring-gray-600 rounded-full\"\n                onClick={handleAddItem}\n              >\n                + Add to Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function Restaurant() {\n  const router = useRouter();\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: router.query.id },\n  });\n\n  if (error) return \"Error Loading Dishes\";\n  if (loading) return <Loader />;\n  if (data.restaurant.data.attributes.dishes.data.length) {\n    const { restaurant } = data;\n\n    return (\n      <div className='py-6'>\n        <h1 className=\"text-4xl font-bold text-green-600\">\n          {restaurant.data.attributes.name}\n        </h1>\n        <div className=\"py-16 px-8 bg-white rounded-3xl\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"flex flex-wrap -m-4 mb-6\">\n              {restaurant.data.attributes.dishes.data.map((res) => {\n                return <DishCard key={res.id} data={res} />;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <h1>No Dishes Found</h1>;\n  }\n}"]},"metadata":{},"sourceType":"module"}